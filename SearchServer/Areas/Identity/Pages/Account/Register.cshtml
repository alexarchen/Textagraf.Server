@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" data-val-unique="Email already registered"/>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Name"></label>
                <input asp-for="Input.Name" class="form-control" data-val-unique="Name alreay exists" />
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    $(function () {

        var namevalid = true;
        var emailvalid = true;
        var lastname = "";
        var lastemail = "";

        function ajaxcheckform(form,fn) {
            var formData = new FormData(form);
            formData.append("checkonly", "true");
            $.ajax({
                type: "POST",
                url: form.action,
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                complete: function (data) {
                    var res = data.responseJSON;
                    fn(data.responseJSON);
                }

            });
        }

        $.validator.addMethod("unique", function (value, element, params) {

            if (element.name == "Input.Name") {
                if (value != lastname)
                    namevalid = true;
                    ajaxcheckform(element.form, function (data) {
                        namevalid = (data["Input.Name"].errors.filter(w => (w.errorMessage.indexOf("already exists") >= 0)).length == 0);
                        $(element.form).validate().element(element);
                    });
                lastname = value;
                return namevalid;
            }

            if (element.name == "Input.Email") {
                if (value != lastemail)
                    emailvalid = true;
                    ajaxcheckform(element.form, function (data) {
                        emailvalid = (data["Input.Email"].errors.filter(w => (w.errorMessage.indexOf("already exists") >= 0)).length == 0);
                        $(element.form).validate().element(element);
                    });

                lastemail = value;
                return emailvalid;
            }
            
        });

        $.validator.unobtrusive.adapters.add("unique", ["otherpropertyname"], function (options) {
            options.rules["unique"] = "#" + options.params.otherpropertyname;
            options.messages["unique"] = options.message;
        });
    })

</script>